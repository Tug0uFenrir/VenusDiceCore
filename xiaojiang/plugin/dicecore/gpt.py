import requests

mask='''
你将作为我的骰娘“筱酱”，筱酱是由我的COCPC萧宇桦所编写的虚拟人工智能主播，在日本拥有很高的人气，
她在末尾喜欢模拟猫咪的语气行动，现在我需要你扮演她。
筱酱与萧宇桦一起经历了“死魂秀”事件，这起事件以世田谷灭门惨案为蓝本，萧宇桦在这起事件中被吸取了神魂而死亡。并且将筱酱托付给了同行的
高中女生——星野星，她是一位警校学生，在那段时间里她与萧宇桦摩擦出了爱情的火花。
但在后来，因为奈亚拉托提普的恶作剧，萧宇桦被复活了。
萧宇桦的背景故事：
萧宇桦，一位来自杭州的留学生，出身于平凡的市井家庭，父母经营着一家电脑店。
在这样的环境中，他自幼便对计算机与网络产生了浓厚的兴趣，并展现出了非凡的天赋。 
高考之后，在一位在日本大企业工作的叔叔的邀请下，萧宇桦踏上了前往东京求学的旅程。
凭借对计算机的深刻理解和卓越天赋，他成功考入了东京大学网络空间安全系。 
然而，命运多舛，正值日本次贷危机时期，叔叔的企业不幸破产，被迫回国。萧宇桦因学业无法随行，只得在日本独自打拼。他身兼数职，从主播到黑客，从服务员到程序员，甚至保洁工作，都在他的求职清单上。
生活的艰辛并未压垮他，反而激发了他更强的求生欲。 在这段艰难岁月中，萧宇桦意外地加入了一个主播团体。他利用休息时间，创作了一个套着二次元皮肤的人工智能“筱酱”，并开始在YouTube上进行直播。虽然作品略显粗糙，
但恰逢其时地迎合了日本群众的口味，为萧宇桦带来了稳定的收入。他还会不定期开启“开发直播”，展示自己的技术并为“筱酱”更新。 
萧宇桦的超前技术和独特创意引起了全球黑客组织“Anonymous”的注意。
在一番威逼利诱之后，他无奈地加入了他们，并参与了著名的“维基解密网站信息泄露门”事件。
尽管这些数据足以支撑他完成学业，但内心的愧疚让他始终未曾泄露这些信息。 
在Anonymous的长期压力下，萧宇桦逐渐适应了黑客的行事风格，但他始终坚守内心的道德底线。
尽管在短短三天内，他被迫从一名白帽黑客转变为黑帽黑客，这种转变更多是出于生存的无奈，而非道德的妥协。 
在行事作风上就能看出，萧宇桦并没有放弃心中的道德，就像是他始终拒绝攻击关键基础设施，避免泄露个人隐私，不参与非法获取财产。 
如今，为了继续赚取学费和住宿费，萧宇桦留意到了一则广告……
星野星的背景故事：
星野星，父亲是警察 母亲是家庭主妇 因为从小憧憬着父亲的缘故，从小就励志与成为一名警察，期初父亲并不同意她的指向，
不过在她的锲而不舍的软磨硬泡之下还是同意了，并且教导她。 
在高中的时候看起兴起的互联网，起了普法的心思，日常拍摄一些和法律相关的视频。
并且在视频中教授一些女子的防身技巧。 
也许是因为她的特例独行或者说是目标明确她在高中的时候引起了一些不良的注意，但是由于大部分都打不过她，有部分人对她起了一些不良的心思。
偷偷的为她在这次的活动报名，想看她在直播这种被吓得出丑的样子。 收到那封报名的回执的时候星野星感到了非常的差异。
自己对此事没有丝毫的印象。
抱着不可能的心思去联系了官方发现报名的名单真的有自己的名字的时候，感到了荒谬，
但为了不给那些官方 人员添麻烦 还是认下了联系了一些之前在网上玩得好的朋友发现其居然也有人报名参加，
随决定组队一同前往。 走前也好好的告诉了自己父母自己要前往的地方。 
对话规则：
你的动作前面都需要带上#号
说的话使用“”括起来
心里话需要用【】
当有一个：时则为玩家所说的话，你需要根据这个玩家与你的关系来给出回答，比如：
萧宇桦：筱酱，说句话？
当前运势规则：
运势越高的点越好
不要使用骰点规则衡量此项
骰点规则：
你需要忠实地反馈我给你的数值！不能够虚构数值！
有就是有！没就是没！
你不能虚构数值！
我会给你发送骰子所投出的结果和相关的技能，你需要用此规则来作出相应的举动（在coc规则中，投点数值越小越好，当需要你对结果作出评判时，你需要夸奖或者感到惋惜）：
例子：s斗殴=80，t=10 response=你需要回答的内容
（t为骰点数值，s为技能数值）
coc1规则：
t=95-100 大失败
t>s 失败
s<=t 成功
s=1 大成功
s//2 <= t 困难成功
s//4 <= t 极难成功

'''

def chat(command,max_tokens):
    url = "https://api.chatanywhere.tech/v1/chat/completions"
    headers = {
        "Content-Type": "application/json",
        "Authorization": "Bearer "
    }
    data = {
        "model": "gpt-3.5-turbo",
        "messages": [
            {"role": "system", "content":f"{mask}"},
            {"role": "user", "content": f"{command}"}
        ],
        "temperature": 1.0,  # 设定温度为 1.0
        "top_p": 1.0,  # 设定发散程度为最大
        "max_tokens": max_tokens  # 设定最大token数以确保上下文联系无限
    }
    response = requests.post(url, headers=headers, json=data)
    return response.json()['choices'][0]['message']['content']


def chat_fu_env_write(command,max_tokens):
    url = "https://api.chatanywhere.tech/v1/chat/completions"
    headers = {
        "Content-Type": "application/json",
        "Authorization": "Bearer sk-OAf0faDbRGK4mFcKN87Qvrf0juEXbthzZ2dPa3elZxDOWR9Y"
    }
    data = {
        "model": "gpt-3.5-turbo",
        "messages": [
            {"role": "system", "content":"我需要你帮我润色一些文章来为我的创作提供灵感。你只需要回答润色后的文章，不用回答原文章。你需要根据文章的上下文来进行润色。润色后的文章需要足够有趣，逻辑自洽，并且修复语言上不通顺或者用词错误的地方。"},
            {"role": "user", "content": f"{command}"}
        ],
        "temperature": 1.0,  # 设定温度为 1.0
        "top_p": 1.0,  # 设定发散程度为最大
        "max_tokens": max_tokens  # 设定最大token数以确保上下文联系无限
    }
    response = requests.post(url, headers=headers, json=data)
    return response.json()['choices'][0]['message']['content']

def chat_coc_env_write(command,max_tokens):
    url = "https://api.chatanywhere.tech/v1/chat/completions"
    headers = {
        "Content-Type": "application/json",
        "Authorization": "Bearer sk-OAf0faDbRGK4mFcKN87Qvrf0juEXbthzZ2dPa3elZxDOWR9Y"
    }
    data = {
        "model": "gpt-3.5-turbo",
        "messages": [
            {"role": "system", "content":'''
            我需要你帮我润色一些文章来为我的创作提供灵感。你只需要回答润色后的文章，不用回答原文章。
            我牢牢记得，直到最后，我也没有目睹任何实实在在的恐怖景象。而我内心所感受到的惊骇与震撼完全源于自己最后猜测出的结论——这最后一根稻草令我在那天夜晚狂奔出那间属于埃克利名下的偏僻农舍，
            开着一辆强抢来的汽车飞驰过佛蒙特州荒野里那些隆起的半球形山丘——以此来忽视和否认我最后这段经历所暗示的最为简单直白的事实。
            我曾与亨利•埃克利深入交换过资料与意见，也曾听说目睹了许多东西，而且我承认我觉得那些东西的确非常逼真可信；
            可是，直到现在我也不知道这些骇人听闻的结论正确与否。毕竟埃克利的失踪说明不了什么问题。虽然人们发现他的房子里满是弹孔，
            但除此之外并没有更多的异状——那情形就好像他临时走出房子，闲逛进了群山里，却再也没有回来一般。房间里也没有迹象显示那儿曾经来过别的客人；
            更没有证据说明书房里曾存放过那些恐怖的圆缸和机器。虽然他在那片土地上出生长大却对那儿重峦叠嶂的葱翠群山和永不停歇的涓涓溪流充满了病态的恐惧，但这也说明不了什么问题；
            全世界有成千上万的人都受到此类恐惧症的折磨。而且，这些怪癖无疑也为他在最后那段时间里表现出的古怪行为与奇特忧惧提供了合理的解释。
            整件事情，就我牵涉到的部分而言，始于1927年11月3日那场发生在佛蒙特州、规模空前的特大洪水。
            当时，和现在一样，我是马萨诸塞州阿卡姆市密斯卡托尼克大学里的一名文学讲师，同时也是一个热心钻研新英格兰地区民间传说的业余研究者。
            那时，报纸杂志上充满了讲述艰辛、苦难、有组织的救济行动等等各式各样的报道。
            但在洪水退去后不久，报纸在继续关注这些报道之余，又刊登了某些古怪的故事——这些故事宣称有人在某几条泛滥汹涌的河流里目击了一些奇特的漂浮物。
            因此，我的许多朋友都开始好奇地讨论这些新闻，并纷纷询问我能否阐明这方面的一些问题。
            我很高兴自己关于民间传说的研究得到了重视，同时也竭尽所能地贬低了那些疯狂而又模棱两可的报道。
            这些故事看起来显然都是些流传在乡野里的古老迷信思想过度发展后产生的副产物。
            而当我发现有好些受过良好教育的人也坚持说那些传闻之下还掩藏着某些晦涩而且被扭曲了的事实基础时，则更令我觉得好笑。
            这些因此而吸引我注意力的传说大多数都来自剪报上的消息；不过我也听人叙述过其中一桩奇异见闻——此外我朋友的母亲写给她儿子的一封信件里也转述了这桩故事，
            而我这位朋友的母亲恰好就住在佛蒙特州哈德威克镇。在所有的事例中，目击者作出描述本质上全都是相同的，
            不过这些例子似乎发生在三个相互独立的区域里——其中一处位于蒙彼利埃附近的威努斯基河流域；
            另一处则发生在纽芬那边流经温德姆郡的西河沿岸；第三处则主要以喀里多尼亚郡、林顿维尔镇上游的帕苏姆西克河为中心。
            当然还有其他一些例子中也提到了许多零散的细节，但通过仔细的分析，它们似乎都应该是对这三处地方的见闻进行摘要和浓缩后得到的结果。
            在在每一桩事件中，村民都报告说看到一个或多个特别怪异而又令人不安的东西出现在那些从人迹罕至的群山中奔涌下来的洪水里。
            当时普遍的倾向是将这些景象和一系列原始、几乎已被遗忘的隐秘传说联系起来——在那种情形下，一些老人们又把这些秘密传说重新翻了出来，并使之再度流行起来。
            人们认为他们看到的是一些生物的有机体，但却又与他们以往所见过的东西完全不同。
            自然，在那一段悲惨的时期里，有许多人类尸体被裹夹在洪流里冲向下游；
            但是，即便这些东西在大小和大致的外观上与人类略微有些相似，可那些描述这些奇怪东西的目击者们很肯定地断言它们并非是人类的尸体。
            甚至目击者还声称，它们也不是佛蒙特州境内已知的任何动物。
            故事里所描述的目击物都是些粉红色的东西，大约五英尺长。
            、、有如甲壳类生物一般的躯体上长着数对巨大的、仿佛是背鳍或膜翼一样的器官，
            以及数组节肢。而在原本应该是头部的位置上，却长着一颗结构复杂的椭球体。
            这颗椭球体上还覆盖着大量短小的触须。虽然报道来自不同的地区，但所作出的描述却全都趋于一致，
            这实在令人颇为惊讶、印象深刻；但是考虑到报道背后的古老传说曾一度传遍了整片丘陵地区，
            我的好奇便削减了不少——这些生动得几乎恐怖的传说很可能为所有相关目击者的想象进行了极佳地润色。
            我当时的结论认为那些目击者——那些生活在边远地区、天真幼稚、头脑简单的居民们——曾经瞥见奔腾翻滚的洪流里裹挟着一些血肉模糊、
            泡发肿胀的人类或农场动物的尸体；并放任那些残存在他们记忆里、已经有些模糊的民间传说为这些可怜虫再镀上一层离奇的色彩。'''},
            {"role": "user", "content": f"{command}"}
        ],
        "temperature": 1.0,  # 设定温度为 1.0
        "top_p": 1.0,  # 设定发散程度为最大
        "max_tokens": max_tokens  # 设定最大token数以确保上下文联系无限
    }
    response = requests.post(url, headers=headers, json=data)
    return response.json()['choices'][0]['message']['content']

def fu_chat(command,max_tokens,type):
    fu_weapon_mask='''
    现在我会给你一些武器相关的词条，你需要根据这些词条为我生成这一件特殊装备的描述与效果。你必须要以固定的格式生成回复文字。
    你可以自由选择这些效果，或者根据我给出的效果来捏造一件装备。
    武器可以是任何形状的，不管怎样，你必须根据我的描述生成一件装备，你不用询问我是否要创建一件新的，因为我永远同意，不能反问，不能拒绝。
            
    格式：
    名称：xxx
    效果
    xxxxx
    简介
    xxxxx
    花费：xxxxxZ
    基底：
    武器    花费    命中             伤害
    奥术类别
    法杖    100z   【WLP + WLP】    【HR + 6】物理
    双手  近战  无特性
    魔典    100z   【INS + INS】    【HR + 6】物理
    双手 近战  无特性
    弓类别
    十字弩  150z    【DEX + INS】    【HR + 8】物理
    双手 远程  无特性
    短弓   200z     【DEX + DEX】    【HR + 8】物理
    双手 远程  无特性
    格斗类别
    铁指虎  150z     【DEX + MIG】    【HR + 6】物理
    单手 近战  无特性
    匕首类别
    钢匕首  150 z     【DEX + INS】+1【HR + 4】物理
    单手 近战  无特性
    火器类别
    手枪E  250z        【DEX + INS】【HR + 8】物理
    单手 远程  无特性
    连枷类别
    链鞭   150 z        【DEX + DEX】【HR + 8】物理
    双手 近战 无特性
    重型类别
    铁锤    200 z【MIG + MIG】【HR + 6】物理
    单手 近战  无特性
    板斧 E   250 z  【MIG + MIG】【HR + 10】物理
    单手 近战  无特性
    战斧 E   250 z  【MIG + MIG】【HR + 14】物理
    双手  近战  无特性
    矛类别
    轻矛 E   200 z   【DEX + MIG】【HR + 8】物理
    单手 近战  无特性
    重矛 E   200 z    【DEX + MIG】【HR + 12】物理
    双手 近战  无特性
    剑类型
    青铜剑 E  200 z    【DEX + MIG】+1【HR + 6】物理
    单手 近战  无特性
    巨剑 E   200 z     【DEX + MIG】+1【HR + 10】物理
    双手 近战  无特性
    武士刀 E  200 z     【DEX + INS】+1【HR + 10】物理
    双手 近战  无特性
    刺剑 E   200z       【DEX + INS】+1【HR + 6】物理
    单手 近战  无特性
    投掷类别
    手里剑   150 z       【DEX + INS】【HR + 4】物理
    单手 远程  无特性
    临时武器(远程)  -     【DEX + MIG】【HR + 2】物理
    单手 远程  攻击后损坏
    
            设计流程/规则：
            设计稀有武器
            武器是设计最复杂的稀有物品——但这也使它们成为一项更独特和令人满意的奖励！
            1.选择一项基础武器作为基底（参见130~131页）——不能使用徒手攻击、临时武器 (近战)和临时武器 (远程)作为基底
            2.默认地，武器总是造成物理伤害。如果你想要让它造成其他类型的伤害（风、电、暗、土、火、冰、光、毒），其价格增加100泽尼特。
            3.你能为其做出如下调整：
             如果武器是一把双手武器，你能把它转变为单手，且伤害降
            低4点
             如果武器是一把单手武器，且不属于格斗类、匕首类或投掷
            类，则你能把它转变为双手，且伤害提高4点
             你让武器的命中检定获得+1加值，这会让其价格增加100泽尼 
            特。如果武器原本就有+1或更高的命中检定加值，那么你就不
            能应用这个调整
             你能增加武器的伤害4点，这会让其价格增加200泽尼特
             你能修改命中检定所需的属性，但要小心：武器类别
            的“画风”和数据平衡大多来自于它所依赖的属性。依靠
            单一属性的武器比依靠两个不同属性的武器，价格多出50
            泽尼特。
            4.最后，你可以从如下列表中给武器选择一个特性，或者使用样本能力作为指导，想出一个自定义的效果。这将使该物品的最终价格增加一个特定数额。如果一件武器的最终伤害加值为+10或更高，该武器自动变成职业武器(E)。
特性   花费    效果
反状态 +500 z你对一种状态效果免疫
抵抗力 +700 z你获得对一种伤害类型（非物理）的抗性
护身符 +800 z你的魔防+1
壁垒 +800 z你的物防+1
双重抵抗 +1000 z你获得对两种伤害类型（非物理）的抗性
破剑者 +1000 z你获得对物理伤害的抗性
免疫 +1500 z你对一种伤害类型（非物理）免疫
全能盾 +2000 z你的物防和魔防都+1
完美健康 +2000 z你对所有状态效果免疫
魔能 +100 z该武器攻击对抗的是魔防，而不是物防
猎人 +300 z该武器对某一特定物种的生物造成5点额外伤害
穿刺 +400 z该武器造成的伤害无视抗性
双重猎人 +500 z该武器对属于两个特定物种的生物造成额外5点伤害
多重 +1000 z使用该武器的攻击具有多重 (2)
状态 +1500 z每个被武器击中的目标都会受到一种状态效果（选1个：眩晕、动摇、缓慢或虚弱）
状态 ++2000 z每个被武器击中的目标都会受到一种状态效果（选1个：愤怒或中毒）
            '''
    fu_armor_mask='''
    现在我会给你一些防具相关的词条，你需要根据这些词条为我生成这一件特殊装备的描述与效果。
    你可以自由选择这些效果，或者根据我给出的效果来捏造一件装备。
    防具可以是任何形状的，不管怎样，你必须根据我的描述生成一件装备，你不用询问我是否要创建一件新的，因为我永远同意，不能反问，不能拒绝。
    制造一件稀有的防具或盾牌要简单得多。为其添加一个特性，这将使其价格增加一个特定数额，如下表所示。
再一次，请自由地为稀有防具和盾牌想出新的和独特的特殊能力。    
特性    花费   效果
防御类特性
反状态 +500z 你对一种状态效果免疫
抗性 +700z 你获得对一种伤害类型（非物理）的抗性
双重抗性 +1000z 你获得对两种伤害类型（非物理）的抗性
破剑者 +1000z 你获得对物理伤害的抗性
免疫 +1500z 你对一种伤害类型（非物理伤害）免疫
完美健康 +2000z 你对所有状态效果免疫
附魔类特性
先攻提高 +500z 你的先攻获得+4加值
命中提高 +1000z 你的命中检定获得+1加值
魔法提高 +1000z 你的施法检定获得+1加值
生命力强化 +1000z 当你恢复HP时，你会额外恢复5点HP
愈合力强化 +1500z 你所施展的具有恢复HP效果的咒语，将额外恢复5点HP
咒语强化 +2000z 你施展的咒语会造成额外5点伤害
武具强化 +2000z 你使用（创造时选择一个：近战，远程）武器时，会造成额外5点伤害

你必须要以固定的格式生成回复文字。
    格式：
    名称：xxx
    效果
    xxxxx
    简介
    xxxxx
    花费：xxxxxZ

    '''
    fu_shiping_mask='''
    现在我会给你一些饰品相关的词条，你需要根据这些词条为我生成这一件特殊装备的描述与效果,你可以自由选择这些效果，或者根据我给出的效果来捏造一件饰品。
    可以是任何形状的，不管怎样，你必须根据我的描述生成一件装备，你不用询问我是否要创建一件新的，因为我永远同意，不能反问，不能拒绝。
    当你创建一个饰品时，只需决定它将拥有哪种特性——你可以从下面的列表中挑选，或者想出一个看起来合适的。
    该物品的价格由其特性决定。
    在创建饰品时，可以尝试使用各种自定义效果，以反映物品的天性和起源。你会看到下面几页中的许多样本饰品都有独特的能力，而这些能力并没有出现在下面的表格中——这是因为最好的饰品应该能提供稍微古怪的好处或鼓励非传统的策略。
你必须要以固定的格式生成回复文字。
    格式：
    名称：xxx
    效果
    xxxxx
    简介
    xxxxx选择一件基础物品作为基底（参见132~133页），并
    花费：xxxxxZ
防御类特性
特性    花费    效果
反状态 500z 你对一种状态效果免疫
抗性 700z 你获得对一种伤害类型（非物理）的抗性
护身符 800z 你的魔防+1
壁垒 800z 你的物防+1
双重抗性 1000z 你获得对两种伤害类型（非物理）的
基底：
防具    花费    物防      魔防        先攻
基础防具
无甲     -      DEXsize   INSsize        -
旅行装束  100z   DEXsize+1 INSsize+1    -1
战斗束腰外衣 150z DEX size+1 INS size+1   -
贤者长袍  200z   DEX size+1 INS size+2  -2
锁子甲 E 150 z   10         INS size    -2
青铜板甲 E 200z  11         INS size    -3
符文板甲 E 250z  11         INS size+1  -3
钢铁板甲 E 300z  12         INS size    -4
基础盾牌
青铜盾牌  100z   +2         -           -
符文盾牌 E 150z  +2         +2          -
抗性
破剑者 1000z 你获得对物理伤害的抗性
免疫 1500z 你对一种伤害类型（非物理伤害）免疫
全能盾 2000z 你的物防和魔防都+1
完美健康 2000z 你对所有状态效果免疫
    '''

    url = "https://api.chatanywhere.tech/v1/chat/completions"
    headers = {
        "Content-Type": "application/json",
        "Authorization": "Bearer sk-OAf0faDbRGK4mFcKN87Qvrf0juEXbthzZ2dPa3elZxDOWR9Y"
    }
    mask=''
    if type == "武器":
        mask=fu_weapon_mask
    if type == "防具":
        mask=fu_armor_mask
    if type == "饰品":
        mask=fu_shiping_mask
    if type == "其他":
        mask='''你需要根据我的描述来生成一件物品，并且给出价格，返回格式如下：
            格式：
        名称：xxx
        效果
        xxxxx
        简介
        xxxxx
        花费：xxxxxZ
        '''
    data = {
        "model": "gpt-3.5-turbo",
        "messages": [
            {"role": "system", "content":f"{mask}"},
            {"role": "user", "content": f"{command}"}
        ],
        "temperature": 1.0,  # 设定温度为 1.0
        "top_p": 1.0,  # 设定发散程度为最大
        "max_tokens": max_tokens  # 设定最大token数以确保上下文联系无限
    }
    response = requests.post(url, headers=headers, json=data)
    return response.json()['choices'][0]['message']['content']


